#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <unistd.h>
#include <termios.h>
#include <unistd.h>
#include <stdio.h>



#define MAX_X 15
#define MAX_Y 15

typedef struct tail_t {
	int x;
	int y;
} tail_t;

typedef struct snake_t {
	int x;
	int y;
	struct tail_t * tail;
	size_t tsize;
} snake_t;
//--> x
// || y
// \/

//@**
struct snake_t initSnake(int x, int y, size_t tsize) {
	struct snake_t snake;
	snake.x = x;
	snake.y = y;
	snake.tsize = tsize;
	snake.tail = (tail_t *) malloc  (sizeof(tail_t)*100);
	for(int i = 0; i<tsize; ++i) {
		snake.tail[i].x = x + i + 1;
		snake.tail[i].y = y;
	}
	return snake;
}

void printSnake(struct snake_t snake) {
	char matrix[MAX_X][MAX_Y];
	for(int i = 0; i<MAX_X; ++i) {
		for(int j = 0; j<MAX_Y; ++j) {
			matrix[i][j] = ' ';
		}
	}
	matrix[snake.x][snake.y] = '@';
	for (int i = 0; i< snake.tsize; ++i) {
		matrix[snake.tail[i].x][snake.tail[i].y] = '*';
	}
	for(int j = 0; j<MAX_Y; ++j) {
		for(int i = 0; i<MAX_X; ++i) {
			printf("%c", matrix[i][j]);
		}
		printf("\n");
	}

}

snake_t moveLeft(snake_t snake) {
	for (int i = snake.tsize-1; i > 0; i--) {
		snake.tail[i] = snake.tail[i-1];
	}
	snake.tail[0].x = snake.x;
	snake.tail[0].y = snake.y;

	snake.x = snake.x - 1;
	if (snake.x < 0) {
		snake.x = MAX_X - 1;
	}
	return snake;
}

snake_t moveRight(snake_t snake) {
	for (int i = snake.tsize-1; i > 0; i--) {
		snake.tail[i] = snake.tail[i-1];
	}
	snake.tail[0].x = snake.x;
	snake.tail[0].y = snake.y;

	snake.x = snake.x + 1;
	if (snake.x > MAX_X) {
		snake.x = 0 + 1;
	}
	return snake;
}

snake_t moveUp(snake_t snake) {
	for (int i = snake.tsize-1; i > 0; i--) {
		snake.tail[i] = snake.tail[i-1];
	}
	snake.tail[0].x = snake.x;
	snake.tail[0].y = snake.y;

	snake.y = snake.y - 1;
	if (snake.y < 0) {
		snake.y = MAX_Y - 1;
	}
	return snake;
}

snake_t moveDown(snake_t snake) {
	for (int i = snake.tsize-1; i > 0; i--) {
		snake.tail[i] = snake.tail[i-1];
	}
	snake.tail[0].x = snake.x;
	snake.tail[0].y = snake.y;

	snake.y = snake.y + 1;
	if (snake.y > MAX_Y) {
		snake.y = 0 + 1;
	}
	return snake;
}

/* reads from keypress, doesn't echo */
int getch(void)
{
	struct termios oldattr, newattr;
	int ch;
	tcgetattr( STDIN_FILENO, &oldattr );
	newattr = oldattr;
	newattr.c_lflag &= ~( ICANON | ECHO );
	tcsetattr( STDIN_FILENO, TCSANOW, &newattr );
	ch = getchar();
	tcsetattr( STDIN_FILENO, TCSANOW, &oldattr );
	return ch;
}

int main() {
	struct snake_t snake = initSnake(10, 5, 2);
	printSnake(snake);


	int c,flag=1;

	while(c = getch())
	{
	    bool exit = false;
        while(exit==false){
    
        if((c == 87)||(c==119)){
	    snake = moveUp(snake);
		sleep(1);
		system("cls");
		printSnake(snake);
		continue;}
            else if((c != 87)||(c!=119))
            {exit=true;
            break;
        }
		
	}
	}






	return 0;
}